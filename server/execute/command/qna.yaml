version: 3
created_by: GMC2alg
domain: turbointegrator
seed_examples:
  - context: "This process will run the TI ExecuteCommand function and print the
      output to Server Logs. Use case: Intended for production. 1/ To run an
      ExecuteCommand function from any part of the model, including RushTI or
      third party system without direct access to TI Editor. 2/ To remove the
      requirement of creating a one-off process to use this function. 3/ To
      compress/uncompress files. 4/ To copy files and folders from the TM1
      server. 5/ To delete files and folders from the TM1 server. 6/ To list and
      kill tasks running in the TM1 server. 7/ To export and import registry
      keys such as ODBC data sources."
    questions_and_answers:
      - question: What is the main function of the TI process?
        answer: The main function of the TI process is to run the ExecuteCommand
          function and print the output to Server Logs.
      - question: What are some use cases for this TI process?
        answer: The TI process is intended for production use and can, for example, run
          ExecuteCommand from any part of the model, remove the requirement of
          creating a one-off process, compress or uncompress files, copy or
          delete files and folders from the TM1 server, list and kill tasks
          running in the TM1 server, and export and import registry keys such as
          ODBC data sources.
      - question: Why is this TI process advantageous for ExecuteCommand?
        answer: This TI process is advantageous for ExecuteCommand because it removes
          the need for accessing the TI Editor directly or creating a dedicated
          one-off process for using the function.
  - context: The TI process supports running commands through either PowerShell or
      Windows CMD by preparing the full command string appropriately. It checks
      if the command parameter (pCommand) is enclosed in quotes, removes them if
      necessary, and uses either POWERSHELL.EXE or CMD.EXE to execute the final
      command string.
    questions_and_answers:
      - question: How does the TI process determine which command execution environment
          to use?
        answer: The TI process uses a check on the pPowerShell parameter; if set to 1,
          it prepares the command to be run using POWERSHELL.EXE, otherwise it
          defaults to CMD.EXE.
      - question: What does the TI process do with quotes in the pCommand parameter?
        answer: The TI process checks if the pCommand parameter is enclosed in quotes
          and removes them if necessary before proceeding with command
          preparation.
      - question: How does the TI process handle the command output?
        answer: The TI process writes the command output to a specified file
          (cCmdOutputFile), which can then be set as a data source for logging
          purposes if pLogOutput is enabled.
document_outline: This document contains a detailed description of an IBM Turbo
  Integrator process script designed to run ExecuteCommand functions and its
  intended use in production environments.
document:
  repo: https://github.com/GMC2alg/bedrockti.git
  commit: 8c3ed2fbaa5674f3c984a9ed08a1c51f77c2b271
  patterns:
    - processes/}bedrock.server.executecommand.ti