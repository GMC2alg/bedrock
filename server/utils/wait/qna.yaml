version: 3
created_by: GMC2alg
domain: turbointegrator
seed_examples:
  - context: This Bedrock TM1 TI will put a process in a wait state for time
      specified in seconds.
    questions_and_answers:
      - question: What does this Bedrock TM1 TI process do?
        answer: The Bedrock TM1 TI process puts a process in a wait state for a time
          specified in seconds.
      - question: In what unit is the wait state time specified for this TI process?
        answer: The wait state time is specified in seconds for this TI process.
      - question: Can the Bedrock TM1 TI process pause execution?
        answer: Yes, the Bedrock TM1 TI process can pause execution by putting it in a
          wait state for the specified time.
  - context: Entwickle einen IBM Turbo Integrator Prozess, der es ermöglicht, einen
      Prozess in einem Wartezustand für die angegebene Zeit in Sekunden zu
      setzen.
    questions_and_answers:
      - question: Wozu dient der IBM Turbo Integrator Prozess?
        answer: Der IBM Turbo Integrator Prozess ermöglicht es, einen Prozess in einem
          Wartezustand für die angegebene Zeit in Sekunden zu setzen.
      - question: In welcher Sprache sind die Anweisungen des IBM Turbo Integrator
          Prozesses geschrieben?
        answer: Die Anweisungen des IBM Turbo Integrator Prozesses sind auf Deutsch
          geschrieben.
      - question: Wie lange kann der IBM Turbo Integrator Prozess einen Prozess
          pausieren?
        answer: Der IBM Turbo Integrator Prozess kann einen Prozess für die angegebene
          Zeit in Sekunden pausieren.
  - context: StringGlobalVariable('sProcessReturnCode');
      NumericGlobalVariable('nProcessReturnCode'); nProcessReturnCode= 0;
    questions_and_answers:
      - question: What is the purpose of sProcessReturnCode in the code?
        answer: The sProcessReturnCode is a global string variable meant to store the
          process return code.
      - question: What data type is nProcessReturnCode in the code and what initial
          value is assigned?
        answer: The nProcessReturnCode is a numeric global variable, and it is
          initialized with the value 0.
      - question: Are the process return codes stored as string or numeric values?
        answer: The process return codes are stored as both string and numeric values,
          using sProcessReturnCode and nProcessReturnCode, respectively.
  - context: nWaitTime = pWaitSec * 1000; Sleep(nWaitTime);
    questions_and_answers:
      - question: How is the wait time calculated before the sleep function is called?
        answer: The wait time is calculated by multiplying pWaitSec by 1000 to convert
          seconds into milliseconds.
      - question: What purpose does the Sleep function serve in the code?
        answer: The Sleep function pauses the execution of the process for the
          calculated nWaitTime in milliseconds.
      - question: Is the wait time in seconds or milliseconds for the Sleep function?
        answer: The wait time for the Sleep function is given in milliseconds.
  - context: If( nErrors > 0 ); ... LogOutput( cMsgErrorLevel, Expand(
      cMsgErrorContent ) ); ... EndIf;
    questions_and_answers:
      - question: What does the code segment do when nErrors is greater than 0?
        answer: When nErrors is greater than 0, the code logs an error message using the
          LogOutput function.
      - question: What variables are used to determine and format the error message in
          case of errors?
        answer: The variables cMsgErrorLevel and cMsgErrorContent are used to determine
          and format the error message.
      - question: What action is taken if no errors are encountered in the code?
        answer: If no errors are encountered, the process is successfully indicated with
          info logs and continues execution.
document_outline: Overview of an IBM Turbo Integrator process that places a
  process in a wait state for a given period, including its functionality, code
  variables, and error handling.
document:
  repo: https://github.com/GMC2alg/bedrockti.git
  commit: 8c3ed2fbaa5674f3c984a9ed08a1c51f77c2b271
  patterns:
    - processes/}bedrock.server.wait.ti