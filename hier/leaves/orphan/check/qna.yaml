version: 3
created_by: GMC2alg
domain: turbointegrator
seed_examples:
- context: 'This process checks all leaf elements (in the Leaves hierarchy) of the
    specified dimension(s). Within the Leaves hierarchy for each element *all hierarchies*
    are scanned for the existence of the leaf element. If the leaf element does not
    exist in all hierarchies except for Leaves then the element is classified as an
    orphan and added to the 'Orphan Leaf Elements' subset. Additionally when running
    with pIncludeNoParentElems parameter set, elements that have no parent will be
    stored in No Parents subset of matching hierarchy (except `Leaves`) within Leaves.
    The subset name might be accommodated and will be suffixed by dash and name of
    the matching hierarchy. Use case: 1. Primarily intended to identify dimensions
    with maintenance issues during development/prototyping. 2. Can also be used for
    trouble-shooting in productive instances.'
  questions_and_answers:
  - question: What does the Turbo Integrator process check?
    answer: The process checks all leaf elements in the Leaves hierarchy of the specified
      dimension(s) and scans all hierarchies for the existence of these leaf elements.
  - question: When is a leaf element classified as an orphan?
    answer: A leaf element is classified as an orphan if it doesn't exist in all hierarchies
      except for the Leaves hierarchy.
  - question: What happens when the pIncludeNoParentElems parameter is set?
    answer: When the pIncludeNoParentElems parameter is set, elements that have no
      parent will be stored in the No Parents subset of the matching hierarchy within
      Leaves.
- context: The process, primarily intended to identify dimensions with maintenance
    issues during development/prototyping, can also be used for troubleshooting in
    productive instances.
  questions_and_answers:
  - question: What is the primary intention of this Turbo Integrator process?
    answer: The primary intention is to identify dimensions with maintenance issues
      during development or prototyping.
  - question: Can the process be used in productive instances?
    answer: Yes, the process can also be used for trouble-shooting in productive instances.
  - question: Why is it useful to identify orphan elements?
    answer: Identifying orphan elements helps in spotting potential maintenance issues
      within the dimensions.
- context: The Turbo Integrator process offers functionalities like validating dimensions,
    creating dynamic subsets, and generating logs for error tracking and dimension
    issues.
  questions_and_answers:
  - question: What functionalities does the Turbo Integrator process provide?
    answer: It provides functionalities like validating dimensions, creating dynamic
      subsets, and generating logs for error tracking and dimension issues.
  - question: How does the process handle errors?
    answer: The process generates logs for error tracking and can terminate or continue
      based on error handling settings.
  - question: Why is dimension validation necessary in this process?
    answer: Dimension validation ensures that the parameters being passed are accurate
      and prevents errors in identifying orphan elements.
- context: The subset name for elements with no parent might be accommodated and will
    be suffixed by a dash and the name of the matching hierarchy. This allows the
    subsets to be uniquely identifiable for each hierarchy.
  questions_and_answers:
  - question: How is the subset name for elements with no parent structured?
    answer: The subset name is suffixed by a dash and the name of the matching hierarchy,
      making it uniquely identifiable.
  - question: Why is a unique subset name important?
    answer: A unique subset name ensures clear identification and management of subsets
      across different hierarchies.
  - question: Does the process support dynamic naming of subsets?
    answer: Yes, the process accommodates dynamic naming of subsets for elements with
      no parent.
- context: Each element in the Leaves hierarchy is scanned across all hierarchies.
    If the element is not found in any other hierarchy besides Leaves, it is added
    to the 'Orphan Leaf Elements' subset. When including elements without parents,
    they are added to the 'No Parents' subset if they have no parent elements in corresponding
    hierarchies.
  questions_and_answers:
  - question: Where are orphan elements stored?
    answer: Orphan elements are stored in the 'Orphan Leaf Elements' subset.
  - question: What criteria qualify an element to be added to the 'No Parents' subset?
    answer: An element is added to the 'No Parents' subset if it has no parent elements
      in corresponding hierarchies.
  - question: Is the Leaves hierarchy scanned for all elements?
    answer: Yes, each element in the Leaves hierarchy is scanned across all hierarchies.
document_outline: The document outlines the features and functionalities of the Turbo
  Integrator process designed for identifying maintenance issues in dimensions and
  managing orphan elements.
document:
  repo: https://raw.githubusercontent.com/GMC2alg/bedrockti/refs/heads/main/processes/%7Dbedrock.hier.leaves.orphan.check.ti
